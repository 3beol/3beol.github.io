---
---

// http://dmauro.github.io/Keypress/
// Generated by CoffeeScript 1.7.1
$(document).ready(function(){

(function() {
  // 글쇠 연습에 쓰이는 배열을 담는다
  var table_taja = {};
  // 눌러야할 글쇠의 값을 가진다
  var current_key = -1;
  // 글쇠 연습하기의 메뉴를 누르면 true 가 되어 동작하도록 만든다
  //var tadak_tadak = false;

  var bind_keyboard, combo, listener, _i, _len, _ref;
  listener = new window.keypress.Listener();
  //listener.should_force_event_defaults = true;

  random_key = function() {
    var keys = Object.keys(table_taja);
    return keys[Math.floor(Math.random()*keys.length)];
  }

  taja_key_reset = function(change) {
    //alert("taja_key_reset change:" + change);
    if (tadak_tadak == false) {
      //alert("current_key:" + current_key);
      $('#hand').css("display", "none");
      if ((current_key !== -1) && Object.keys(table_taja).length) {
        $("#" + table_taja[current_key][2] + "").removeClass('topress');
        // 설정된 값을 지우고 초기화를 한다
        current_key = -1;
      }
      return;
    } else {
      $('#hand').css("display", "block");
      if (current_key === -1) {
      } else {
        if (Object.keys(table_taja).length) {
          // 먼저 설정된 글쇠가 있으면 풀어준다
          $("#" + table_taja[current_key][2] + "").removeClass('topress');
        }
      }
      // 바뀌기 전의 글쇠에 표시된 것을 먼저 지우고 새로운 글판을 불러온다
      if (change) {
        table_taja = get_taja_hangeul(KO_type);
      }
    }
    //alert(Object.keys(table_taja).length);
    if (Object.keys(table_taja).length) {
      current_key = random_key();
      $("#" + table_taja[current_key][2] + "").addClass('topress');
      $('#jamo_panel').html(current_key);
      $('#hand').attr('src', "{{ '/images/taja/hands_" + table_taja[current_key][1].toString() + ".png' | prepend: site.baseurl }}");
    } else {
      $('#jamo_panel').html('ⓘ');
      $('#hand').attr('src', "{{ '/images/taja/hands.png' | prepend: site.baseurl }}");
    }
  }

  match_key = function(key) {
    if (tadak_tadak == false) {
      return;
    }

    if ((key == table_taja[current_key][0]) || (key == table_taja[current_key][3])) {
      taja_key_reset();
    }
    else {
      $('#jamo_panel').css('background-color', 'black');
      setTimeout(function() {
        $('#jamo_panel').css('background-color', 'white');
      }, 150);
    }
  };

  // html 글판의 글쇠 눌림에 대한 것을 정한다
  // 글쇠 자리 익히기도 포함한다
  bind_keyboard = function() {
    var combos;
    var key_nodes;
    var keyboard_msg_node, keys;
    var on_down, on_shift_down, on_shift_up, on_up;
    keyboard_msg_node = $('.keyboard .message');
    $('body').bind('keydown', function(e) {
      return keyboard_msg_node.text(
        "" + e.keyCode +
        " => " + e.key +
        " : keyDown"
      );
    //}).bind('keyup', function(e) {
      //return keyboard_msg_node.text(
        //"" + e.keyCode +
        //" : " + e.key +
        //" keyUp"
      //);
    });
    keys = $('.keyboard .key');
    key_nodes = {};
    $.each(keys, function(_, node) {
      var id, name;
      node = $(node);
      id = node.attr("id");
      name = id.substr(4);
      return key_nodes[name] = node;
    });
    on_down = function(node) {
      return node.addClass("pressed");
    };
    on_up = function(node) {
      return node.removeClass("pressed");
    };
    on_shift_down = function(node) {
      return node.addClass("shift_pressed");
    };
    on_shift_up = function(node) {
      return node.removeClass("shift_pressed");
    };
    on_capslock_down = function(node) {
      if (node.hasClass("capslock_pressed")) {
        return node.removeClass("capslock_pressed");
      } else {
        return node.addClass("capslock_pressed");
      }
    };
    on_capslock_up = function(node) {
      //return node.removeClass("capslock_pressed");
      return;
    };
    combos = [
    {keys: "`",
      on_keydown: function() {on_down(key_nodes.accent);},
      on_keyup: function() {on_up(key_nodes.accent); match_key("`");},
    }, {keys: "~",
      on_keydown: function() {on_shift_down(key_nodes.accent);},
      on_keyup: function() {on_shift_up(key_nodes.accent); match_key("~");},
    }, {keys: "1",
      on_keydown: function() {on_down(key_nodes.one);},
      on_keyup: function() {on_up(key_nodes.one);match_key("1");},
    }, {keys: "!",
      on_keydown: function() {on_shift_down(key_nodes.one);},
      on_keyup: function() {on_shift_up(key_nodes.one);match_key("!");},
    }, {keys: "2",
      on_keydown: function() {on_down(key_nodes.two);},
      on_keyup: function() {on_up(key_nodes.two);match_key("2");},
    }, {keys: "@",
      on_keydown: function() {on_shift_down(key_nodes.two);},
      on_keyup: function() {on_shift_up(key_nodes.two);match_key("@");},
    }, {keys: "3",
      on_keydown: function() {on_down(key_nodes.three);},
      on_keyup: function() {on_up(key_nodes.three);match_key("3");},
    }, {keys: "#",
      on_keydown: function() {on_shift_down(key_nodes.three);},
      on_keyup: function() {on_shift_up(key_nodes.three);match_key("#");},
    }, {keys: "4",
      on_keydown: function() {on_down(key_nodes.four);},
      on_keyup: function() {on_up(key_nodes.four);match_key("4");},
    }, {keys: "$",
      on_keydown: function() {on_shift_down(key_nodes.four);},
      on_keyup: function() {on_shift_up(key_nodes.four);match_key("$");},
    }, {keys: "5",
      on_keydown: function() {on_down(key_nodes.five);},
      on_keyup: function() {on_up(key_nodes.five);match_key("5");},
    }, {keys: "%",
      on_keydown: function() {on_shift_down(key_nodes.five);},
      on_keyup: function() {on_shift_up(key_nodes.five);match_key("%");},
    }, {keys: "6",
      on_keydown: function() {on_down(key_nodes.six);},
      on_keyup: function() {on_up(key_nodes.six);match_key("6");},
    }, {keys: "^",
      on_keydown: function() {on_shift_down(key_nodes.six);},
      on_keyup: function() {on_shift_up(key_nodes.six);match_key("^");},
    }, {keys: "7",
      on_keydown: function() {on_down(key_nodes.seven);},
      on_keyup: function() {on_up(key_nodes.seven);match_key("7");},
    }, {keys: "&",
      on_keydown: function() {on_shift_down(key_nodes.seven);},
      on_keyup: function() {on_shift_up(key_nodes.seven);match_key("&");},
    }, {keys: "8",
      on_keydown: function() {on_down(key_nodes.eight);},
      on_keyup: function() {on_up(key_nodes.eight);match_key("8");},
    }, {keys: "*",
      on_keydown: function() {on_shift_down(key_nodes.eight);},
      on_keyup: function() {on_shift_up(key_nodes.eight);match_key("*");},
    }, {keys: "9",
      on_keydown: function() {on_down(key_nodes.nine);},
      on_keyup: function() {on_up(key_nodes.nine);match_key("9");},
    }, {keys: "(",
      on_keydown: function() {on_shift_down(key_nodes.nine);},
      on_keyup: function() {on_shift_up(key_nodes.nine);match_key("(");},
    }, {keys: "0",
      on_keydown: function() {on_down(key_nodes.zero);},
      on_keyup: function() {on_up(key_nodes.zero);match_key("0");},
    }, {keys: ")",
      on_keydown: function() {on_shift_down(key_nodes.zero);},
      on_keyup: function() {on_shift_up(key_nodes.zero);match_key(")");},
    }, {keys: "-",
      on_keydown: function() {on_down(key_nodes.hyphen);},
      on_keyup: function() {on_up(key_nodes.hyphen);match_key("-");},
    }, {keys: "_",
      on_keydown: function() {on_shift_down(key_nodes.hyphen);},
      on_keyup: function() {on_shift_up(key_nodes.hyphen);match_key("_");},
    }, {keys: "=",
      on_keydown: function() {on_down(key_nodes.equals);},
      on_keyup: function() {on_up(key_nodes.equals);match_key("=");},
    }, {keys: "+",
      on_keydown: function() {on_shift_down(key_nodes.equals);},
      on_keyup: function() {on_shift_up(key_nodes.equals);match_key("+");},
    }, {keys: "backspace",
      on_keydown: function() {on_down(key_nodes.backspace);},
      on_keyup: function() {on_up(key_nodes.backspace);},
    }, {keys: "tab",
      on_keydown: function() {on_down(key_nodes.tab);},
      on_keyup: function() {on_up(key_nodes.tab);},
    }, {keys: "q",
      on_keydown: function() {on_down(key_nodes.q);},
      on_keyup: function() {on_up(key_nodes.q);match_key("q");},
    }, {keys: "Q",
      on_keydown: function() {on_down(key_nodes.q);},
      on_keyup: function() {on_up(key_nodes.q);match_key("Q");},
    }, {keys: "w",
      on_keydown: function() {on_down(key_nodes.w);},
      on_keyup: function() {on_up(key_nodes.w);match_key("w");},
    }, {keys: "W",
      on_keydown: function() {on_down(key_nodes.w);},
      on_keyup: function() {on_up(key_nodes.w);match_key("W");},
    }, {keys: "e",
      on_keydown: function() {on_down(key_nodes.e);},
      on_keyup: function() {on_up(key_nodes.e);match_key("e");},
    }, {keys: "E",
      on_keydown: function() {on_down(key_nodes.e);},
      on_keyup: function() {on_up(key_nodes.e);match_key("E");},
    }, {keys: "r",
      on_keydown: function() {on_down(key_nodes.r);},
      on_keyup: function() {on_up(key_nodes.r);match_key("r");},
    }, {keys: "R",
      on_keydown: function() {on_down(key_nodes.r);},
      on_keyup: function() {on_up(key_nodes.r);match_key("R");},
    }, {keys: "t",
      on_keydown: function() {on_down(key_nodes.t);},
      on_keyup: function() {on_up(key_nodes.t);match_key("t");},
    }, {keys: "T",
      on_keydown: function() {on_down(key_nodes.t);},
      on_keyup: function() {on_up(key_nodes.t);match_key("T");},
    }, {keys: "y",
      on_keydown: function() {on_down(key_nodes.y);},
      on_keyup: function() {on_up(key_nodes.y);match_key("y");},
    }, {keys: "Y",
      on_keydown: function() {on_down(key_nodes.y);},
      on_keyup: function() {on_up(key_nodes.y);match_key("Y");},
    }, {keys: "u",
      on_keydown: function() {on_down(key_nodes.u);},
      on_keyup: function() {on_up(key_nodes.u);match_key("u");},
    }, {keys: "U",
      on_keydown: function() {on_down(key_nodes.u);},
      on_keyup: function() {on_up(key_nodes.u);match_key("U");},
    }, {keys: "i",
      on_keydown: function() {on_down(key_nodes.i);},
      on_keyup: function() {on_up(key_nodes.i);match_key("i");},
    }, {keys: "I",
      on_keydown: function() {on_down(key_nodes.i);},
      on_keyup: function() {on_up(key_nodes.i);match_key("I");},
    }, {keys: "o",
      on_keydown: function() {on_down(key_nodes.o);},
      on_keyup: function() {on_up(key_nodes.o);match_key("o");},
    }, {keys: "O",
      on_keydown: function() {on_down(key_nodes.o);},
      on_keyup: function() {on_up(key_nodes.o);match_key("O");},
    }, {keys: "p",
      on_keydown: function() {on_down(key_nodes.p);},
      on_keyup: function() {on_up(key_nodes.p);match_key("p");},
    }, {keys: "P",
      on_keydown: function() {on_down(key_nodes.p);},
      on_keyup: function() {on_up(key_nodes.p);match_key("P");},
    }, {keys: "[",
      on_keydown: function() {on_down(key_nodes.left_bracket);},
      on_keyup: function() {on_up(key_nodes.left_bracket);match_key("[");},
    }, {keys: "{",
      on_keydown: function() {on_shift_down(key_nodes.left_bracket);},
      on_keyup: function() {on_shift_up(key_nodes.left_bracket);match_key("{");},
    }, {keys: "]",
      on_keydown: function() {on_down(key_nodes.right_bracket);},
      on_keyup: function() {on_up(key_nodes.right_bracket);match_key("]");},
    }, {keys: "}",
      on_keydown: function() {on_shift_down(key_nodes.right_bracket);},
      on_keyup: function() {on_shift_up(key_nodes.right_bracket);match_key("}");},
    }, {keys: "\\",
      on_keydown: function() {on_down(key_nodes.backslash);},
      on_keyup: function() {on_up(key_nodes.backslash);match_key("\\");},
    }, {keys: "|",
      on_keydown: function() {on_shift_down(key_nodes.backslash);},
      on_keyup: function() {on_shift_up(key_nodes.backslash);match_key("|");},
    }, {keys: "caps_lock",
      on_keydown: function() {on_capslock_down(key_nodes.caps_lock);},
      on_keyup: function() {on_capslock_up(key_nodes.caps_lock);},
    }, {keys: "a",
      on_keydown: function() {on_down(key_nodes.a);},
      on_keyup: function() {on_up(key_nodes.a);match_key("a");},
    }, {keys: "A",
      on_keydown: function() {on_down(key_nodes.a);},
      on_keyup: function() {on_up(key_nodes.a);match_key("A");},
    }, {keys: "s",
      on_keydown: function() {on_down(key_nodes.s);},
      on_keyup: function() {on_up(key_nodes.s);match_key("s");},
    }, {keys: "S",
      on_keydown: function() {on_down(key_nodes.s);},
      on_keyup: function() {on_up(key_nodes.s);match_key("S");},
    }, {keys: "d",
      on_keydown: function() {on_down(key_nodes.d);},
      on_keyup: function() {on_up(key_nodes.d);match_key("d");},
    }, {keys: "D",
      on_keydown: function() {on_down(key_nodes.d);},
      on_keyup: function() {on_up(key_nodes.d);match_key("D");},
    }, {keys: "f",
      on_keydown: function() {on_down(key_nodes.f);},
      on_keyup: function() {on_up(key_nodes.f);match_key("f");},
    }, {keys: "F",
      on_keydown: function() {on_down(key_nodes.f);},
      on_keyup: function() {on_up(key_nodes.f);match_key("F");},
    }, {keys: "g",
      on_keydown: function() {on_down(key_nodes.g);},
      on_keyup: function() {on_up(key_nodes.g);match_key("g");},
    }, {keys: "G",
      on_keydown: function() {on_down(key_nodes.g);},
      on_keyup: function() {on_up(key_nodes.g);match_key("G");},
    }, {keys: "h",
      on_keydown: function() {on_down(key_nodes.h);},
      on_keyup: function() {on_up(key_nodes.h);match_key("h");},
    }, {keys: "H",
      on_keydown: function() {on_down(key_nodes.h);},
      on_keyup: function() {on_up(key_nodes.h);match_key("H");},
    }, {keys: "j",
      on_keydown: function() {on_down(key_nodes.j);},
      on_keyup: function() {on_up(key_nodes.j);match_key("j");},
    }, {keys: "J",
      on_keydown: function() {on_down(key_nodes.j);},
      on_keyup: function() {on_up(key_nodes.j);match_key("J");},
    }, {keys: "k",
      on_keydown: function() {on_down(key_nodes.k);},
      on_keyup: function() {on_up(key_nodes.k);match_key("k");},
    }, {keys: "K",
      on_keydown: function() {on_down(key_nodes.k);},
      on_keyup: function() {on_up(key_nodes.k);match_key("K");},
    }, {keys: "l",
      on_keydown: function() {on_down(key_nodes.l);},
      on_keyup: function() {on_up(key_nodes.l);match_key("l");},
    }, {keys: "L",
      on_keydown: function() {on_down(key_nodes.l);},
      on_keyup: function() {on_up(key_nodes.l);match_key("L");},
    }, {keys: ";",
      on_keydown: function() {on_down(key_nodes.semicolon);},
      on_keyup: function() {on_up(key_nodes.semicolon);match_key(";");},
    }, {keys: ":",
      on_keydown: function() {on_shift_down(key_nodes.semicolon);},
      on_keyup: function() {on_shift_up(key_nodes.semicolon);match_key(":");},
    }, {keys: "\'",
      on_keydown: function() {on_down(key_nodes.apostrophe);},
      on_keyup: function() {on_up(key_nodes.apostrophe);match_key("\'");},
    }, {keys: "\"",
      on_keydown: function() {on_shift_down(key_nodes.apostrophe);},
      on_keyup: function() {on_shift_up(key_nodes.apostrophe);match_key("\"");},
    }, {keys: "enter",
      on_keydown: function() {on_down(key_nodes.enter);},
      on_keyup: function() {on_up(key_nodes.enter);},
    }, {keys: "shift",
      on_keydown: function() {on_down(key_nodes.left_shift);on_down(key_nodes.right_shift);},
      on_keyup: function() {on_up(key_nodes.left_shift);on_up(key_nodes.right_shift);}
    }, {keys: "z",
      on_keydown: function() {on_down(key_nodes.z);},
      on_keyup: function() {on_up(key_nodes.z);match_key("z");},
    }, {keys: "Z",
      on_keydown: function() {on_down(key_nodes.z);},
      on_keyup: function() {on_up(key_nodes.z);match_key("Z");},
    }, {keys: "x",
      on_keydown: function() {on_down(key_nodes.x);},
      on_keyup: function() {on_up(key_nodes.x);match_key("x");},
    }, {keys: "X",
      on_keydown: function() {on_down(key_nodes.x);},
      on_keyup: function() {on_up(key_nodes.x);match_key("X");},
    }, {keys: "c",
      on_keydown: function() {on_down(key_nodes.c);},
      on_keyup: function() {on_up(key_nodes.c);match_key("c");},
    }, {keys: "C",
      on_keydown: function() {on_down(key_nodes.c);},
      on_keyup: function() {on_up(key_nodes.c);match_key("C");},
    }, {keys: "v",
      on_keydown: function() {on_down(key_nodes.v);},
      on_keyup: function() {on_up(key_nodes.v);match_key("v");},
    }, {keys: "V",
      on_keydown: function() {on_down(key_nodes.v);},
      on_keyup: function() {on_up(key_nodes.v);match_key("V");},
    }, {keys: "b",
      on_keydown: function() {on_down(key_nodes.b);},
      on_keyup: function() {on_up(key_nodes.b);match_key("b");},
    }, {keys: "B",
      on_keydown: function() {on_down(key_nodes.b);},
      on_keyup: function() {on_up(key_nodes.b);match_key("B");},
    }, {keys: "n",
      on_keydown: function() {on_down(key_nodes.n);},
      on_keyup: function() {on_up(key_nodes.n);match_key("n");},
    }, {keys: "N",
      on_keydown: function() {on_down(key_nodes.n);},
      on_keyup: function() {on_up(key_nodes.n);match_key("N");},
    }, {keys: "m",
      on_keydown: function() {on_down(key_nodes.m);},
      on_keyup: function() {on_up(key_nodes.m);match_key("m");},
    }, {keys: "M",
      on_keydown: function() {on_down(key_nodes.m);},
      on_keyup: function() {on_up(key_nodes.m);match_key("M");},
    }, {keys: ",",
      on_keydown: function() {on_down(key_nodes.comma);},
      on_keyup: function() {on_up(key_nodes.comma);match_key(",");},
    }, {keys: "<",
      on_keydown: function() {on_shift_down(key_nodes.comma);},
      on_keyup: function() {on_shift_up(key_nodes.comma);match_key("<");},
    }, {keys: ".",
      on_keydown: function() {on_down(key_nodes.period);},
      on_keyup: function() {on_up(key_nodes.period);match_key(".");},
    }, {keys: ">",
      on_keydown: function() {on_shift_down(key_nodes.period);},
      on_keyup: function() {on_shift_up(key_nodes.period);match_key(">");},
    }, {keys: "/",
      on_keydown: function() {on_down(key_nodes.forwardslash);},
      on_keyup: function() {on_up(key_nodes.forwardslash);match_key("/");},
    }, {keys: "?",
      on_keydown: function() {on_shift_down(key_nodes.forwardslash);},
      on_keyup: function() {on_shift_up(key_nodes.forwardslash);match_key("?");},
    }, {keys: "ctrl",
      on_keydown: function() {on_down(key_nodes.left_ctrl);on_down(key_nodes.right_ctrl);},
      on_keyup: function() {on_up(key_nodes.left_ctrl);on_up(key_nodes.right_ctrl);}
    }, {keys: "alt",
      on_keydown: function() {on_down(key_nodes.left_alt);on_down(key_nodes.right_alt);},
      on_keyup: function() {on_up(key_nodes.left_alt);on_up(key_nodes.right_alt);}
    }, {keys: "cmd",
      on_keydown: function() {on_down(key_nodes.left_cmd);on_down(key_nodes.right_cmd);},
      on_keyup: function() {on_up(key_nodes.left_cmd);on_up(key_nodes.right_cmd);}
    }, {keys: "space",
      on_keydown: function() {on_down(key_nodes.space);},
      on_keyup: function() {on_up(key_nodes.space);}
    }, {keys: "up",
      on_keydown: function() {on_down(key_nodes.up);},
      on_keyup: function() {on_up(key_nodes.up);}
    }, {keys: "down",
      on_keydown: function() {on_down(key_nodes.down);},
      on_keyup: function() {on_up(key_nodes.down);}
    }, {keys: "left",
      on_keydown: function() {on_down(key_nodes.left);},
      on_keyup: function() {on_up(key_nodes.left);}
    }, {keys: "right",
      on_keydown: function() {on_down(key_nodes.right);},
      on_keyup: function() {on_up(key_nodes.right);}
    }, {keys: "print",
      on_keydown: function(e) {on_down(key_nodes.print);},
      on_keyup: function() {on_up(key_nodes.print);}
    }, {keys: "scroll",
      on_keydown: function() {on_down(key_nodes.scroll_lock);},
      on_keyup: function() {on_up(key_nodes.scroll_lock);}
    }, {keys: "pause",
      on_keydown: function() {on_down(key_nodes.pause_break);},
      on_keyup: function() {on_up(key_nodes.pause_break);}
    }, {keys: "insert",
      on_keydown: function() {on_down(key_nodes.insert);},
      on_keyup: function() {on_up(key_nodes.insert);}
    }, {keys: "home",
      on_keydown: function() {on_down(key_nodes.home);},
      on_keyup: function() {on_up(key_nodes.home);}
    }, {keys: "pageup",
      on_keydown: function() {on_down(key_nodes.page_up);},
      on_keyup: function() {on_up(key_nodes.page_up);}
    }, {keys: "delete",
      on_keydown: function() {on_down(key_nodes["delete"]);},
      on_keyup: function() {on_up(key_nodes["delete"]);}
    }, {keys: "end",
      on_keydown: function() {on_down(key_nodes.end);},
      on_keyup: function() {on_up(key_nodes.end);}
    }, {keys: "pagedown",
      on_keydown: function() {on_down(key_nodes.page_down);},
      on_keyup: function() {on_up(key_nodes.page_down);}
    }, {keys: "num",
      on_keydown: function() {on_down(key_nodes.num_lock);},
      on_keyup: function() {on_up(key_nodes.num_lock);}
    }, {keys: "num_divide",
      on_keydown: function() {on_down(key_nodes.divide);},
      on_keyup: function() {on_up(key_nodes.divide);match_key("/");}
    }, {keys: "num_multiply",
      on_keydown: function() {on_down(key_nodes.multiply);},
      on_keyup: function() {on_up(key_nodes.multiply);match_key("*");}
    }, {keys: "num_subtract",
      on_keydown: function() {on_down(key_nodes.subtract);},
      on_keyup: function() {on_up(key_nodes.subtract);match_key("-");}
    }, {keys: "num_add",
      on_keydown: function() {on_down(key_nodes.add);},
      on_keyup: function() {on_up(key_nodes.add);match_key("+");}
    }, {keys: "num_enter",
      on_keydown: function() {on_down(key_nodes.num_enter);},
      on_keyup: function() {on_up(key_nodes.num_enter);}
    }, {keys: "num_decimal",
      on_keydown: function() {on_down(key_nodes.num_decimal);},
      on_keyup: function() {on_up(key_nodes.num_decimal);match_key(".");}
    }, {keys: "num_0",
      on_keydown: function() {on_down(key_nodes.num_0);},
      on_keyup: function() {on_up(key_nodes.num_0);match_key("0");}
    }, {keys: "num_1",
      on_keydown: function() {on_down(key_nodes.num_1);},
      on_keyup: function() {on_up(key_nodes.num_1);match_key("1");}
    }, {keys: "num_2",
      on_keydown: function() {on_down(key_nodes.num_2);},
      on_keyup: function() {on_up(key_nodes.num_2);match_key("2");}
    }, {keys: "num_3",
      on_keydown: function() {on_down(key_nodes.num_3);},
      on_keyup: function() {on_up(key_nodes.num_3);match_key("3");}
    }, {keys: "num_4",
      on_keydown: function() {on_down(key_nodes.num_4);},
      on_keyup: function() {on_up(key_nodes.num_4);match_key("4");}
    }, {keys: "num_5",
      on_keydown: function() {on_down(key_nodes.num_5);},
      on_keyup: function() {on_up(key_nodes.num_5);match_key("5");}
    }, {keys: "num_6",
      on_keydown: function() {on_down(key_nodes.num_6);},
      on_keyup: function() {on_up(key_nodes.num_6);match_key("6");}
    }, {keys: "num_7",
      on_keydown: function() {on_down(key_nodes.num_7);},
      on_keyup: function() {on_up(key_nodes.num_7);match_key("7");}
    }, {keys: "num_8",
      on_keydown: function() {on_down(key_nodes.num_8);},
      on_keyup: function() {on_up(key_nodes.num_8);match_key("8");}
    }, {keys: "num_9",
      on_keydown: function() {on_down(key_nodes.num_9);},
      on_keyup: function() {on_up(key_nodes.num_9);match_key("9");}
    }
  ];
  return listener.register_many(combos);
  };

///****************************************************///
///**************      OHI 한글 입력기      *****************///
///****************************************************///
  demo_1 = {};
  //ohi_Hangeul_Process(key);
  demo_1.combos = [
    {   keys: "`",
      on_keydown: function() { ohi_Hangeul_Process("`"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {   keys: "~",
      on_keydown: function() { ohi_Hangeul_Process("~"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {   keys: "1",
      on_keydown: function() { ohi_Hangeul_Process("1"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {   keys: "!",
      on_keydown: function() { ohi_Hangeul_Process("!"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {   keys: "2",
      on_keydown: function() { ohi_Hangeul_Process("2"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {   keys: "@",
      on_keydown: function() { ohi_Hangeul_Process("@"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "3",
      on_keydown: function() { ohi_Hangeul_Process("3"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "#",
      on_keydown: function() { ohi_Hangeul_Process("#"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "4",
      on_keydown: function() { ohi_Hangeul_Process("4"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "$",
      on_keydown: function() { ohi_Hangeul_Process("$"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "5",
      on_keydown: function() { ohi_Hangeul_Process("5"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "%",
      on_keydown: function() { ohi_Hangeul_Process("%"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "6",
      on_keydown: function() { ohi_Hangeul_Process("6"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "^",
      on_keydown: function() { ohi_Hangeul_Process("^"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "7",
      on_keydown: function() { ohi_Hangeul_Process("7"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "&",
      on_keydown: function() { ohi_Hangeul_Process("&"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "8",
      on_keydown: function() { ohi_Hangeul_Process("8"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "*",
      on_keydown: function() { ohi_Hangeul_Process("*"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "9",
      on_keydown: function() { ohi_Hangeul_Process("9"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "(",
      on_keydown: function() { ohi_Hangeul_Process("("); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "0",
      on_keydown: function() { ohi_Hangeul_Process("0"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: ")",
      on_keydown: function() { ohi_Hangeul_Process(")"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "-",
      on_keydown: function() { ohi_Hangeul_Process("-"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "_",
      on_keydown: function() { ohi_Hangeul_Process("_"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "=",
      on_keydown: function() { ohi_Hangeul_Process("="); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "+",
      on_keydown: function() { ohi_Hangeul_Process("+"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "backspace",
      on_keydown: function() { return; },
      on_keyup: function() { return;}
    }, {    keys: "tab",
      on_keydown: function() { return; }
    }, {    keys: "q",
      on_keydown: function() { ohi_Hangeul_Process("q"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "Q",
      on_keydown: function() { ohi_Hangeul_Process("Q"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "w",
      on_keydown: function() { ohi_Hangeul_Process("w"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "W",
      on_keydown: function() { ohi_Hangeul_Process("W"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "e",
      on_keydown: function() { ohi_Hangeul_Process("e"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "E",
      on_keydown: function() { ohi_Hangeul_Process("E"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "r",
      on_keydown: function() { ohi_Hangeul_Process("r"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "R",
      on_keydown: function() { ohi_Hangeul_Process("R"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "t",
      on_keydown: function() { ohi_Hangeul_Process("t"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "T",
      on_keydown: function() { ohi_Hangeul_Process("T"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "y",
      on_keydown: function() { ohi_Hangeul_Process("y"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "Y",
      on_keydown: function() { ohi_Hangeul_Process("Y"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "u",
      on_keydown: function() { ohi_Hangeul_Process("u"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "U",
      on_keydown: function() { ohi_Hangeul_Process("U"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "i",
      on_keydown: function() { ohi_Hangeul_Process("i"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "I",
      on_keydown: function() { ohi_Hangeul_Process("I"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "o",
      on_keydown: function() { ohi_Hangeul_Process("o"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "O",
      on_keydown: function() { ohi_Hangeul_Process("O"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "p",
      on_keydown: function() { ohi_Hangeul_Process("p"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "P",
      on_keydown: function() { ohi_Hangeul_Process("P"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "[",
      on_keydown: function() { ohi_Hangeul_Process("["); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "{",
      on_keydown: function() { ohi_Hangeul_Process("{"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "]",
      on_keydown: function() { ohi_Hangeul_Process("]"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "}",
      on_keydown: function() { ohi_Hangeul_Process("}"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "\\",
      on_keydown: function() { ohi_Hangeul_Process("\\"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "|",
      on_keydown: function() { ohi_Hangeul_Process("|"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "caps_lock",
      on_keydown: function() { return; }
    }, {    keys: "a",
      on_keydown: function() { ohi_Hangeul_Process("a"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "A",
      on_keydown: function() { ohi_Hangeul_Process("A"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "s",
      on_keydown: function() { ohi_Hangeul_Process("s"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "S",
      on_keydown: function() { ohi_Hangeul_Process("S"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "d",
      on_keydown: function() { ohi_Hangeul_Process("d"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "D",
      on_keydown: function() { ohi_Hangeul_Process("D"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "f",
      on_keydown: function() { ohi_Hangeul_Process("f"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "F",
      on_keydown: function() { ohi_Hangeul_Process("F"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "g",
      on_keydown: function() { ohi_Hangeul_Process("g"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "G",
      on_keydown: function() { ohi_Hangeul_Process("G"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "h",
      on_keydown: function() { ohi_Hangeul_Process("h"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "H",
      on_keydown: function() { ohi_Hangeul_Process("H"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "j",
      on_keydown: function() { ohi_Hangeul_Process("j"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "J",
      on_keydown: function() { ohi_Hangeul_Process("J"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "k",
      on_keydown: function() { ohi_Hangeul_Process("k"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "K",
      on_keydown: function() { ohi_Hangeul_Process("K"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "l",
      on_keydown: function() { ohi_Hangeul_Process("l"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "L",
      on_keydown: function() { ohi_Hangeul_Process("L"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: ";",
      on_keydown: function() { ohi_Hangeul_Process(";"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: ":",
      on_keydown: function() { ohi_Hangeul_Process(":"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "\'",
      on_keydown: function() { ohi_Hangeul_Process("\'"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "\"",
      on_keydown: function() { ohi_Hangeul_Process("\""); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "enter",
      on_keydown: function() { return; }
    }, {    keys: "shift",
      on_keydown: function() { return; }
    }, {    keys: "z",
      on_keydown: function() { ohi_Hangeul_Process("z"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "Z",
      on_keydown: function() { ohi_Hangeul_Process("Z"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "x",
      on_keydown: function() { ohi_Hangeul_Process("x"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "X",
      on_keydown: function() { ohi_Hangeul_Process("X"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "c",
      on_keydown: function() { ohi_Hangeul_Process("c"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "C",
      on_keydown: function() { ohi_Hangeul_Process("C"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "v",
      on_keydown: function() { ohi_Hangeul_Process("v"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "V",
      on_keydown: function() { ohi_Hangeul_Process("V"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "b",
      on_keydown: function() { ohi_Hangeul_Process("b"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "B",
      on_keydown: function() { ohi_Hangeul_Process("B"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "n",
      on_keydown: function() { ohi_Hangeul_Process("n"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "N",
      on_keydown: function() { ohi_Hangeul_Process("N"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "m",
      on_keydown: function() { ohi_Hangeul_Process("m"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "M",
      on_keydown: function() { ohi_Hangeul_Process("M"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: ",",
      on_keydown: function() { ohi_Hangeul_Process(","); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "<",
      on_keydown: function() { ohi_Hangeul_Process("<"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: ".",
      on_keydown: function() { ohi_Hangeul_Process("."); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: ">",
      on_keydown: function() { ohi_Hangeul_Process(">"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "/",
      on_keydown: function() { ohi_Hangeul_Process("/"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "?",
      on_keydown: function() { ohi_Hangeul_Process("?"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "ctrl",
      on_keydown: function() { return; }
    }, {    keys: "alt",
      on_keydown: function() { return; }
    }, {    keys: "cmd",
      on_keydown: function() { return; }
    }, {    keys: "space",
      on_keydown: function() { return; }
    }, {    keys: "up",
      on_keydown: function() { return; }
    }, {    keys: "down",
      on_keydown: function() { return; }
    }, {    keys: "left",
      on_keydown: function() { return; }
    }, {    keys: "right",
      on_keydown: function() { return; }
    }, {    keys: "print",
      on_keydown: function() { return; }
    }, {    keys: "scroll",
      on_keydown: function() { return; }
    }, {    keys: "pause",
      on_keydown: function() { return; }
    }, {    keys: "insert",
      on_keydown: function() { return; }
    }, {    keys: "home",
      on_keydown: function() { return; }
    }, {    keys: "pageup",
      on_keydown: function() { return; }
    }, {    keys: "delete",
      on_keydown: function() { return; }
    }, {    keys: "end",
      on_keydown: function() { return; }
    }, {    keys: "pagedown",
      on_keydown: function() { return; }
    }, {    keys: "num",
      on_keydown: function() { return; }
    }, {    keys: "num_divide",
      on_keydown: function() { ohi_Hangeul_Process("/"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_multiply",
      on_keydown: function() { ohi_Hangeul_Process("*"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_subtract",
      on_keydown: function() { ohi_Hangeul_Process("-"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_add",
      on_keydown: function() { ohi_Hangeul_Process("+"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_enter",
      on_keydown: function() { return; }
    }, {    keys: "num_decimal",
      on_keydown: function() { ohi_Hangeul_Process("."); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_0",
      on_keydown: function() { ohi_Hangeul_Process("0"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_1",
      on_keydown: function() { ohi_Hangeul_Process("1"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_2",
      on_keydown: function() { ohi_Hangeul_Process("2"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_3",
      on_keydown: function() { ohi_Hangeul_Process("3"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_4",
      on_keydown: function() { ohi_Hangeul_Process("4"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_5",
      on_keydown: function() { ohi_Hangeul_Process("5"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_6",
      on_keydown: function() { ohi_Hangeul_Process("6"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_7",
      on_keydown: function() { ohi_Hangeul_Process("7"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_8",
      on_keydown: function() { ohi_Hangeul_Process("8"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }, {    keys: "num_9",
      on_keydown: function() { ohi_Hangeul_Process("9"); return;},
      on_keyup: function() {ohi_Hangeul_Process("-1"); return;}
    }
  ];

  _ref = demo_1.combos;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  combo = _ref[_i];
  // 글쇠가 눌렸을 때 반복해서 입력되는 것을 막는다
  combo['prevent_repeat'] = true;
  }


demos = {
  demo_1: {
    wire: function() {
      //alert("demo_1 wire");
      // 자리 익히기에서 풀었던 click 을 다시 묶어준다
      tadak_tadak = false;
      mapping_layout_to_html();
      focus_tag_id = 'inputText';
      inputText_focus();
      listener.should_force_event_defaults = true;
      demo_1.registered_combos = listener.register_many(demo_1.combos);
      return;
    },
    unwire: function() {
      //alert("demo_1 unwire");
      if (typeof(demo_1.registered_combos) !== 'undefined') {
        listener.unregister_many(demo_1.registered_combos);
      }
      return;
    }
  },
  demo_2: {
    wire: function() {
      //alert("demo_2 wire");
      // 자리 익히기에서 풀었던 click 을 다시 묶어준다
      tadak_tadak = false;
      mapping_layout_to_html();
      focus_tag_id = 'searchText';
      inputText_focus();
      listener.should_force_event_defaults = true;
      demo_1.registered_combos = listener.register_many(demo_1.combos);
      return;
    },
    unwire: function() {
      if (typeof(demo_1.registered_combos) !== 'undefined') {
        listener.unregister_many(demo_1.registered_combos);
      }
      return;
    }
  },
  demo_3: {
    wire: function() {
      //alert("demo_3 wire");
      // 자리 익히기에서는 html 글쇠의 click 을 푼다
      tadak_tadak = true;
      mapping_layout_to_html();
      focus_tag_id = 'jamo_panel';
      table_taja = get_taja_hangeul(KO_type);
      // false:글판이 바뀌지 않았다
      taja_key_reset(false);
      listener.should_force_event_defaults = false;
      return;
    },
    unwire: function() {
      //alert("demo_3 unwire");
      tadak_tadak = false;
      // false:글판이 바뀌지 않았다
      taja_key_reset(false);
      return;
    }
  },
};

  unwire_demo = function(demo_node) {
  return wire_demo(demo_node, false);
  };

  wire_demo = function(demo_node, wiring) {
  var demo, demo_obj;
  if (wiring == null) {
      wiring = true;
  }
  demo = demo_node.data("demo");
  demo_obj = demos[demo];
  if (!demo_obj) {
      return false;
  }
  if (wiring) {
      return demo_obj.wire();
  }
  return demo_obj.unwire();
  };

  get_active_demo = function() {
  var return_node;
  return_node = false;
  $('.examples .demo').each(function(_, node) {
      node = $(node);
      if (node.css("display") === "block") {
    return return_node = node;
      }
  });
  return return_node;
  };

  activate_demo = function(demo_name) {
  var active_demo, demo, nav_node;
  demo = $(".examples .demo[data-demo=" + demo_name + "]");
  if (!demo.length) {
      return false;
  }
  active_demo = get_active_demo();
  if (demo === active_demo) {
      return false;
  }
  if (active_demo) {
      unwire_demo(active_demo);
      active_demo.css("display", "none");
  }
  demo.css("display", "block");
  nav_node = $(".overview li a[data-demo=" + demo_name + "]");
  $('.overview li a').removeClass("active");
  nav_node.addClass("active");
  wire_demo(demo);
  return;
  };

  activate_next_demo = function() {
  var active_demo, next_demo, next_name;
  active_demo = get_active_demo();
  next_demo = active_demo.next();
  if (next_demo.length) {
      next_name = next_demo.data("demo");
  } else {
      next_name = "demo_1";
  }
  return activate_demo(next_name);
  };

  activate_prev_demo = function() {
  var active_demo, next_demo, next_name;
  active_demo = get_active_demo();
  next_demo = active_demo.prev();
  if (next_demo.length) {
      next_name = next_demo.data("demo");
  } else {
      next_name = "demo_3";
  }
  return activate_demo(next_name);
  };

  bind_demos = function() {
  $('body').delegate('a.demo_link', 'click', function() {
      var demo;
      demo = $(this).data("demo");
      return activate_demo(demo);
  });
  listener.register_combo({
      keys: "`",
      is_exclusive: true,
      prevent_default: true,
      on_keydown: activate_next_demo
  });
  listener.simple_combo("ctrl 1", function() {
      return activate_demo("demo_1");
  }, true);
  listener.simple_combo("ctrl 2", function() {
      return activate_demo("demo_2");
  }, true);
  listener.simple_combo("ctrl 3", function() {
      return activate_demo("demo_3");
  }, true);
  };


  bind_keyboard();
  bind_demos();
  activate_demo("demo_1");

  if (navigator.userAgent.indexOf("Mac OS X") !== -1) {
  $('#key_scroll_lock, #key_pause_break, #key_insert').css("opacity", 0.5);
  }

}).call(this);

});
