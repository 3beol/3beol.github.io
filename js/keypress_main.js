---
---

// http://dmauro.github.io/Keypress/
// Generated by CoffeeScript 1.7.1
$(document).ready(function(){

(function() {
  // 글쇠 연습에 쓰이는 배열을 담는다
  var table_taja = {};
  // 눌러야할 글쇠의 값을 가진다
  var current_key = -1;
  // 글쇠 연습하기의 메뉴를 누르면 true 가 되어 동작하도록 만든다
  //var tadak_tadak = false;
  var taja_Q = [];

  var listener = new window.keypress.Listener();

  random_key = function() {
    var keys = Object.keys(table_taja);
    return keys[Math.floor(Math.random() * keys.length)];
  }

  reset_taja_key = function(change) {
    change = typeof(change != 'undefined') ? change : false;
    if (tadak_tadak == false) {
      $('.hand').css("display", "none");
      if (current_key != -1) {
        if (Object.keys(table_taja).length) {
          // 먼저 설정된 글쇠가 있으면 풀어준다
          var key_id_list = table_taja[current_key][2];
          if (Array.isArray(key_id_list)) {
            for (var i in key_id_list) {
              $("#" + key_id_list[i] + "").removeClass('topress');
            }
          } else {
            $("#" + key_id_list + "").removeClass('topress');
          }
        }
        // 설정된 값을 지우고 초기화를 한다
        current_key = -1;
      }
      return;
    } else {
      $('.hand').css("display", "block");
      if (current_key == -1) {
      } else {
        if (Object.keys(table_taja).length) {
          // 먼저 설정된 글쇠가 있으면 풀어준다
          var key_id_list = table_taja[current_key][2];
          if (Array.isArray(key_id_list)) {
            for (var i in key_id_list) {
              $("#" + key_id_list[i] + "").removeClass('topress');
            }
          } else {
            $("#" + key_id_list + "").removeClass('topress');
          }
        }
      }
      // 바뀌기 전의 글쇠에 표시된 것을 먼저 지우고 새로운 글판을 불러온다
      if (change) {
        table_taja = get_taja_hangeul(KO_type);
      }
    }

    var image = '';
    for (var i = 1; i <= 10; i++) {
      image = '/images/taja/finger_' + i + '_off.png';
      $(".hand div img#finger_" + i + "")
        .attr('src', "{{ '" + image + "' | prepend: site.baseurl }}");
    }

    if (Object.keys(table_taja).length) {
      current_key = random_key();
      var key_id_list = table_taja[current_key][2];
      var finger_list = table_taja[current_key][1];
      if (Array.isArray(key_id_list)) {
        for (var i in key_id_list) {
          $("#" + key_id_list[i] + "").addClass('topress');
          image = '/images/taja/finger_' + finger_list[i].toString() + '_on.png';
          $(".hand div img#finger_" + finger_list[i] + "")
              .attr('src', "{{ '" + image + "' | prepend: site.baseurl }}");
        }
      } else {
        $("#" + key_id_list + "").addClass('topress');
        image = '/images/taja/finger_' + finger_list.toString() + '_on.png';
        $(".hand div img#finger_" + finger_list + "")
            .attr('src', "{{ '" + image + "' | prepend: site.baseurl }}");
      }
      $('#jamo_panel').html(current_key);
    } else {
      $('#jamo_panel').html('ⓘ');
    }
  }

  match_key = function(key) {
    key = String.fromCharCode(convert_english(key.charCodeAt()));
    if (tadak_tadak == false) {
      return;
    }
    var key_value_list = table_taja[current_key][0];
    if (Array.isArray(key_value_list)) {
      var equal = 0;
      if (!taja_Q.length) {
        taja_Q.push(key);
      } else {
        for (var i in taja_Q) {
          if (taja_Q[i] == key) {
            continue;
          }
          taja_Q.push(key);
          taja_Q.sort();
        }
      }
      // 들어온 글쇠와 설정된 글쇠의 값이 같은 갯수를 센다
      for (var i in key_value_list) {
        if (taja_Q[i] != key_value_list[i]) {
          break;
        }
        equal++;
      }
      if (equal == key_value_list.length) {
        reset_taja_key();
      } else {
        if (taja_Q.length == key_value_list.length) {
          $('#jamo_panel').css('background-color', 'black');
          setTimeout(function() {
            $('#jamo_panel').css('background-color', 'white');
          }, 150);
        } else {
          // taja_Q 를 초기화하지 않는다
          return;
        }
      }
      taja_Q = [];
    } else {
      if ((key == table_taja[current_key][0]) ||
          (key == table_taja[current_key][3]) // 갈마들이 글쇠
          ) {
        reset_taja_key();
      } else {
        $('#jamo_panel').css('background-color', 'black');
        setTimeout(function() {
          $('#jamo_panel').css('background-color', 'white');
        }, 150);
      }
    }
  };

  // html 글판의 글쇠 눌림에 대한 것을 정한다
  // 글쇠 자리 익히기도 포함한다
  bind_keyboard = function() {
    var combos;
    var key_nodes;
    var keyboard_msg_node;
    var keys;
    keyboard_msg_node = $('.keyboard .keycode');
    $('body').bind('keydown', function(e) {
      return keyboard_msg_node.html(
        "keyDown: " + e.keyCode +
        " => " + e.key
      );
    //}).bind('keyup', function(e) {
      //return keyboard_msg_node.text(
        //"" + e.keyCode +
        //" : " + e.key +
        //" keyUp"
      //);
    });
    keys = $('.keyboard .key');
    key_nodes = {};
    $.each(keys, function(_, node) {
      var id;
      var name;
      node = $(node);
      id = node.attr("id");
      name = id.substr(4);
      return key_nodes[name] = node;
    });
    on_down = function(node) {
      if (typeof(node) == 'undefined') {return;}
      return node.addClass("pressed");
    };
    on_up = function(node) {
      if (typeof(node) == 'undefined') {return;}
      return node.removeClass("pressed");
    };
    on_shift_down = function(node) {
      if (typeof(node) == 'undefined') {return;}
      return node.addClass("shift_pressed");
    };
    on_shift_up = function(node) {
      if (typeof(node) == 'undefined') {return;}
      return node.removeClass("shift_pressed");
    };
    on_capslock_down = function(node) {
      if (typeof(node) == 'undefined') {return;}
      if (node.hasClass("capslock_pressed")) {
        return node.removeClass("capslock_pressed");
      } else {
        return node.addClass("capslock_pressed");
      }
    };
    on_capslock_up = function(node) {
      if (typeof(node) == 'undefined') {return;}
      //return node.removeClass("capslock_pressed");
      return;
    };
    on_ohi_Hangeul_Process = function(keyCode) {
      if (tadak_tadak) {return;}
      if (ohi_Hangeul_Process(keyCode)) {
        cur_time = new Date().getTime();
        if (last_time) {
          diff_time = cur_time - last_time;//subtutitue event.timeStamp;
        }
        last_time = cur_time;
        total_time += diff_time;
      }

      if (keyCode == 0x0D) {  // enter
        displayResult();
        resetShow();
      }
      //return node.removeClass("capslock_pressed");
      return;
    };
    combos = [
      {keys: "esc",
        on_keydown: function() {
          on_ohi_Hangeul_Process(0x1B);
        },
        on_keyup: function() {
          on_ohi_Hangeul_Process(0x00);
        }
      },
      {keys: "`",
        on_keydown: function() {
          on_down(key_nodes.accent);
          on_ohi_Hangeul_Process(0x60);
        },
        on_keyup: function() {
          on_up(key_nodes.accent);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("`");},
      },
      {keys: "~",
        on_keydown: function() {
          on_down(key_nodes.accent);
          on_ohi_Hangeul_Process(0x7E);
        },
        on_keyup: function() {
          on_up(key_nodes.accent);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("~");},
      },
      {keys: "1",
        on_keydown: function() {
          on_down(key_nodes.one);
          on_ohi_Hangeul_Process(0x31);
        },
        on_keyup: function() {
          on_up(key_nodes.one);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("1");},
      },
      {keys: "!",
        on_keydown: function() {
          on_down(key_nodes.one);
          on_ohi_Hangeul_Process(0x21);
        },
        on_keyup: function() {
          on_up(key_nodes.one);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("!");},
      },
      {keys: "2",
        on_keydown: function() {
          on_down(key_nodes.two);
          on_ohi_Hangeul_Process(0x32);
        },
        on_keyup: function() {
          on_up(key_nodes.two);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("2");},
      },
      {keys: "@",
        on_keydown: function() {
          on_down(key_nodes.two);
          on_ohi_Hangeul_Process(0x40);
        },
        on_keyup: function() {
          on_up(key_nodes.two);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("@");},
      },
      {keys: "3",
        on_keydown: function() {
          on_down(key_nodes.three);
          on_ohi_Hangeul_Process(0x33);
        },
        on_keyup: function() {
          on_up(key_nodes.three);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("3");},
      },
      {keys: "#",
        on_keydown: function() {
          on_down(key_nodes.three);
          on_ohi_Hangeul_Process(0x23);
        },
        on_keyup: function() {
          on_up(key_nodes.three);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("#");},
      },
      {keys: "4",
        on_keydown: function() {
          on_down(key_nodes.four);
          on_ohi_Hangeul_Process(0x34);
        },
        on_keyup: function() {
          on_up(key_nodes.four);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("4");},
      },
      {keys: "$",
        on_keydown: function() {
          on_down(key_nodes.four);
          on_ohi_Hangeul_Process(0x24);
        },
        on_keyup: function() {
          on_up(key_nodes.four);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("$");},
      },
      {keys: "5",
        on_keydown: function() {
          on_down(key_nodes.five);
          on_ohi_Hangeul_Process(0x35);
        },
        on_keyup: function() {
          on_up(key_nodes.five);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("5");},
      },
      {keys: "%",
        on_keydown: function() {
          on_down(key_nodes.five);
          on_ohi_Hangeul_Process(0x25);
        },
        on_keyup: function() {
          on_up(key_nodes.five);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("%");},
      },
      {keys: "6",
        on_keydown: function() {
          on_down(key_nodes.six);
          on_ohi_Hangeul_Process(0x36);
        },
        on_keyup: function() {
          on_up(key_nodes.six);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("6");},
      },
      {keys: "^",
        on_keydown: function() {
          on_down(key_nodes.six);
          on_ohi_Hangeul_Process(0x5E);
        },
        on_keyup: function() {
          on_up(key_nodes.six);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("^");},
      },
      {keys: "7",
        on_keydown: function() {
          on_down(key_nodes.seven);
          on_ohi_Hangeul_Process(0x37);
        },
        on_keyup: function() {
          on_up(key_nodes.seven);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("7");},
      },
      {keys: "&",
        on_keydown: function() {
          on_down(key_nodes.seven);
          on_ohi_Hangeul_Process(0x26);
        },
        on_keyup: function() {
          on_up(key_nodes.seven);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("&");},
      },
      {keys: "8",
        on_keydown: function() {
          on_down(key_nodes.eight);
          on_ohi_Hangeul_Process(0x38);
        },
        on_keyup: function() {
          on_up(key_nodes.eight);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("8");},
      },
      {keys: "*",
        on_keydown: function() {
          on_down(key_nodes.eight);
          on_ohi_Hangeul_Process(0x2A);
        },
        on_keyup: function() {
          on_up(key_nodes.eight);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("*");},
      },
      {keys: "9",
        on_keydown: function() {
          on_down(key_nodes.nine);
          on_ohi_Hangeul_Process(0x39);
        },
        on_keyup: function() {
          on_up(key_nodes.nine);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("9");},
      },
      {keys: "(",
        on_keydown: function() {
          on_down(key_nodes.nine);
          on_ohi_Hangeul_Process(0x28);
        },
        on_keyup: function() {
          on_up(key_nodes.nine);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("(");},
      },
      {keys: "0",
        on_keydown: function() {
          on_down(key_nodes.zero);
          on_ohi_Hangeul_Process(0x30);
        },
        on_keyup: function() {
          on_up(key_nodes.zero);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("0");},
      },
      {keys: ")",
        on_keydown: function() {
          on_down(key_nodes.zero);
          on_ohi_Hangeul_Process(0x29);
        },
        on_keyup: function() {
          on_up(key_nodes.zero);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(")");},
      },
      {keys: "-",
        on_keydown: function() {
          on_down(key_nodes.hyphen);
          on_ohi_Hangeul_Process(0x2D);
        },
        on_keyup: function() {
          on_up(key_nodes.hyphen);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("-");},
      },
      {keys: "_",
        on_keydown: function() {
          on_down(key_nodes.hyphen);
          on_ohi_Hangeul_Process(0x5F);
        },
        on_keyup: function() {
          on_up(key_nodes.hyphen);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("_");},
      },
      {keys: "=",
        on_keydown: function() {
          on_down(key_nodes.equals);
          on_ohi_Hangeul_Process(0x3D);
        },
        on_keyup: function() {
          on_up(key_nodes.equals);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("=");},
      },
      {keys: "+",
        on_keydown: function() {
          on_down(key_nodes.equals);
          on_ohi_Hangeul_Process(0x2B);
        },
        on_keyup: function() {
          on_up(key_nodes.equals);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("+");},
      },
      {keys: "backspace",
        on_keydown: function() {
          on_down(key_nodes.backspace);
          on_ohi_Hangeul_Process(0x08);
        },
        on_keyup: function() {
          on_up(key_nodes.backspace);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "tab",
        on_keydown: function() {
          on_down(key_nodes.tab);
          on_ohi_Hangeul_Process(0x09);
        },
        on_keyup: function() {
          on_up(key_nodes.tab);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "q",
        on_keydown: function() {
          on_down(key_nodes.q);
          on_ohi_Hangeul_Process(0x71);
        },
        on_keyup: function() {
          on_up(key_nodes.q);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("q");},
      },
      {keys: "Q",
        on_keydown: function() {
          on_down(key_nodes.q);
          on_ohi_Hangeul_Process(0x51);
        },
        on_keyup: function() {
          on_up(key_nodes.q);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("Q");},
      },
      {keys: "w",
        on_keydown: function() {
          on_down(key_nodes.w);
          on_ohi_Hangeul_Process(0x77);
        },
        on_keyup: function() {
          on_up(key_nodes.w);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("w");},
      },
      {keys: "W",
        on_keydown: function() {
          on_down(key_nodes.w);
          on_ohi_Hangeul_Process(0x57);
        },
        on_keyup: function() {
          on_up(key_nodes.w);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("W");},
      },
      {keys: "e",
        on_keydown: function() {
          on_down(key_nodes.e);
          on_ohi_Hangeul_Process(0x65);
        },
        on_keyup: function() {
          on_up(key_nodes.e);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("e");},
      },
      {keys: "E",
        on_keydown: function() {
          on_down(key_nodes.e);
          on_ohi_Hangeul_Process(0x45);
        },
        on_keyup: function() {
          on_up(key_nodes.e);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("E");},
      },
      {keys: "r",
        on_keydown: function() {
          on_down(key_nodes.r);
          on_ohi_Hangeul_Process(0x72);
        },
        on_keyup: function() {
          on_up(key_nodes.r);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("r");},
      },
      {keys: "R",
        on_keydown: function() {
          on_down(key_nodes.r);
          on_ohi_Hangeul_Process(0x52);
        },
        on_keyup: function() {
          on_up(key_nodes.r);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("R");},
      },
      {keys: "t",
        on_keydown: function() {
          on_down(key_nodes.t);
          on_ohi_Hangeul_Process(0x74);
        },
        on_keyup: function() {
          on_up(key_nodes.t);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("t");},
      },
      {keys: "T",
        on_keydown: function() {
          on_down(key_nodes.t);
          on_ohi_Hangeul_Process(0x54);
        },
        on_keyup: function() {
          on_up(key_nodes.t);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("T");},
      },
      {keys: "y",
        on_keydown: function() {
          on_down(key_nodes.y);
          on_ohi_Hangeul_Process(0x79);
        },
        on_keyup: function() {
          on_up(key_nodes.y);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("y");},
      },
      {keys: "Y",
        on_keydown: function() {
          on_down(key_nodes.y);
          on_ohi_Hangeul_Process(0x59);
        },
        on_keyup: function() {
          on_up(key_nodes.y);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("Y");},
      },
      {keys: "u",
        on_keydown: function() {
          on_down(key_nodes.u);
          on_ohi_Hangeul_Process(0x75);
        },
        on_keyup: function() {
          on_up(key_nodes.u);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("u");},
      },
      {keys: "U",
        on_keydown: function() {
          on_down(key_nodes.u);
          on_ohi_Hangeul_Process(0x55);
        },
        on_keyup: function() {
          on_up(key_nodes.u);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("U");},
      },
      {keys: "i",
        on_keydown: function() {
          on_down(key_nodes.i);
          on_ohi_Hangeul_Process(0x69);
        },
        on_keyup: function() {
          on_up(key_nodes.i);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("i");},
      },
      {keys: "I",
        on_keydown: function() {
          on_down(key_nodes.i);
          on_ohi_Hangeul_Process(0x49);
        },
        on_keyup: function() {
          on_up(key_nodes.i);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("I");},
      },
      {keys: "o",
        on_keydown: function() {
          on_down(key_nodes.o);
          on_ohi_Hangeul_Process(0x6F);
        },
        on_keyup: function() {
          on_up(key_nodes.o);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("o");},
      },
      {keys: "O",
        on_keydown: function() {
          on_down(key_nodes.o);
          on_ohi_Hangeul_Process(0x4F);
        },
        on_keyup: function() {
          on_up(key_nodes.o);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("O");},
      },
      {keys: "p",
        on_keydown: function() {
          on_down(key_nodes.p);
          on_ohi_Hangeul_Process(0x70);
        },
        on_keyup: function() {
          on_up(key_nodes.p);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("p");},
      },
      {keys: "P",
        on_keydown: function() {
          on_down(key_nodes.p);
          on_ohi_Hangeul_Process(0x50);
        },
        on_keyup: function() {
          on_up(key_nodes.p);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("P");},
      },
      {keys: "[",
        on_keydown: function() {
          on_down(key_nodes.left_bracket);
          on_ohi_Hangeul_Process(0x5B);
        },
        on_keyup: function() {
          on_up(key_nodes.left_bracket);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("[");},
      },
      {keys: "{",
        on_keydown: function() {
          on_down(key_nodes.left_bracket);
          on_ohi_Hangeul_Process(0x7B);
        },
        on_keyup: function() {
          on_up(key_nodes.left_bracket);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("{");},
      },
      {keys: "]",
        on_keydown: function() {
          on_down(key_nodes.right_bracket);
          on_ohi_Hangeul_Process(0x5D);
        },
        on_keyup: function() {
          on_up(key_nodes.right_bracket);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("]");},
      },
      {keys: "}",
        on_keydown: function() {
          on_down(key_nodes.right_bracket);
          on_ohi_Hangeul_Process(0x7D);
        },
        on_keyup: function() {
          on_up(key_nodes.right_bracket);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("}");},
      },
      {keys: "\\",
        on_keydown: function() {
          on_down(key_nodes.backslash);
          on_ohi_Hangeul_Process(0x5C);
        },
        on_keyup: function() {
          on_up(key_nodes.backslash);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("\\");},
      },
      {keys: "|",
        on_keydown: function() {
          on_down(key_nodes.backslash);
          on_ohi_Hangeul_Process(0x7C);
        },
        on_keyup: function() {
          on_up(key_nodes.backslash);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("|");},
      },
      {keys: "caps_lock",
        on_keydown: function() {
          on_capslock_down(key_nodes.caps_lock);
          on_ohi_Hangeul_Process(0x21EA);
        },
        on_keyup: function() {
          on_capslock_up(key_nodes.caps_lock);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "a",
        on_keydown: function() {
          on_down(key_nodes.a);
          on_ohi_Hangeul_Process(0x61);
        },
        on_keyup: function() {
          on_up(key_nodes.a);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("a");},
      },
      {keys: "A",
        on_keydown: function() {
          on_down(key_nodes.a);
          on_ohi_Hangeul_Process(0x41);
        },
        on_keyup: function() {
          on_up(key_nodes.a);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("A");},
      },
      {keys: "s",
        on_keydown: function() {
          on_down(key_nodes.s);
          on_ohi_Hangeul_Process(0x73);
        },
        on_keyup: function() {
          on_up(key_nodes.s);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("s");},
      },
      {keys: "S",
        on_keydown: function() {
          on_down(key_nodes.s);
          on_ohi_Hangeul_Process(0x53);
        },
        on_keyup: function() {
          on_up(key_nodes.s);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("S");},
      },
      {keys: "d",
        on_keydown: function() {
          on_down(key_nodes.d);
          on_ohi_Hangeul_Process(0x64);
        },
        on_keyup: function() {
          on_up(key_nodes.d);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("d");},
      },
      {keys: "D",
        on_keydown: function() {
          on_down(key_nodes.d);
          on_ohi_Hangeul_Process(0x44);
        },
        on_keyup: function() {
          on_up(key_nodes.d);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("D");},
      },
      {keys: "f",
        on_keydown: function() {
          on_down(key_nodes.f);
          on_ohi_Hangeul_Process(0x66);
        },
        on_keyup: function() {
          on_up(key_nodes.f);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("f");},
      },
      {keys: "F",
        on_keydown: function() {
          on_down(key_nodes.f);
          on_ohi_Hangeul_Process(0x46);
        },
        on_keyup: function() {
          on_up(key_nodes.f);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("F");},
      },
      {keys: "g",
        on_keydown: function() {
          on_down(key_nodes.g);
          on_ohi_Hangeul_Process(0x67);
        },
        on_keyup: function() {
          on_up(key_nodes.g);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("g");},
      },
      {keys: "G",
        on_keydown: function() {
          on_down(key_nodes.g);
          on_ohi_Hangeul_Process(0x47);
        },
        on_keyup: function() {
          on_up(key_nodes.g);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("G");},
      },
      {keys: "h",
        on_keydown: function() {
          on_down(key_nodes.h);
          on_ohi_Hangeul_Process(0x68);
        },
        on_keyup: function() {
          on_up(key_nodes.h);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("h");},
      },
      {keys: "H",
        on_keydown: function() {
          on_down(key_nodes.h);
          on_ohi_Hangeul_Process(0x48);
        },
        on_keyup: function() {
          on_up(key_nodes.h);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("H");},
      },
      {keys: "j",
        on_keydown: function() {
          on_down(key_nodes.j);
          on_ohi_Hangeul_Process(0x6A);
        },
        on_keyup: function() {
          on_up(key_nodes.j);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("j");},
      },
      {keys: "J",
        on_keydown: function() {
          on_down(key_nodes.j);
          on_ohi_Hangeul_Process(0x4A);
        },
        on_keyup: function() {
          on_up(key_nodes.j);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("J");},
      },
      {keys: "k",
        on_keydown: function() {
          on_down(key_nodes.k);
          on_ohi_Hangeul_Process(0x6B);
        },
        on_keyup: function() {
          on_up(key_nodes.k);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("k");},
      },
      {keys: "K",
        on_keydown: function() {
          on_down(key_nodes.k);
          on_ohi_Hangeul_Process(0x4B);
        },
        on_keyup: function() {
          on_up(key_nodes.k);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("K");},
      },
      {keys: "l",
        on_keydown: function() {
          on_down(key_nodes.l);
          on_ohi_Hangeul_Process(0x6C);
        },
        on_keyup: function() {
          on_up(key_nodes.l);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("l");},
      },
      {keys: "L",
        on_keydown: function() {
          on_down(key_nodes.l);
          on_ohi_Hangeul_Process(0x4C);
        },
        on_keyup: function() {
          on_up(key_nodes.l);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("L");},
      },
      {keys: ";",
        on_keydown: function() {
          on_down(key_nodes.semicolon);
          on_ohi_Hangeul_Process(0x3B);
        },
        on_keyup: function() {
          on_up(key_nodes.semicolon);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(";");},
      },
      {keys: ":",
        on_keydown: function() {
          on_down(key_nodes.semicolon);
          on_ohi_Hangeul_Process(0x3A);
        },
        on_keyup: function() {
          on_up(key_nodes.semicolon);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(":");},
      },
      {keys: "\'",
        on_keydown: function() {
          on_down(key_nodes.apostrophe);
          on_ohi_Hangeul_Process(0x27);
        },
        on_keyup: function() {
          on_up(key_nodes.apostrophe);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("\'");},
      },
      {keys: "\"",
        on_keydown: function() {
          on_down(key_nodes.apostrophe);
          on_ohi_Hangeul_Process(0x22);
        },
        on_keyup: function() {
          on_up(key_nodes.apostrophe);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("\"");},
      },
      {keys: "enter",
        on_keydown: function() {
          on_down(key_nodes.enter);
          on_ohi_Hangeul_Process(0x0D);
        },
        on_keyup: function() {
          on_up(key_nodes.enter);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "shift",
        on_keydown: function() {
          on_shift_down(key_nodes.left_shift);
          on_shift_down(key_nodes.right_shift);
          on_ohi_Hangeul_Process(0x0F);
        },
        on_keyup: function() {
          on_shift_up(key_nodes.left_shift);
          on_shift_up(key_nodes.right_shift);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "z",
        on_keydown: function() {
          on_down(key_nodes.z);
          on_ohi_Hangeul_Process(0x7A);
        },
        on_keyup: function() {
          on_up(key_nodes.z);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("z");},
      },
      {keys: "Z",
        on_keydown: function() {
          on_down(key_nodes.z);
          on_ohi_Hangeul_Process(0x5A);
        },
        on_keyup: function() {
          on_up(key_nodes.z);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("Z");},
      },
      {keys: "x",
        on_keydown: function() {
          on_down(key_nodes.x);
          on_ohi_Hangeul_Process(0x78);
        },
        on_keyup: function() {
          on_up(key_nodes.x);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("x");},
      },
      {keys: "X",
        on_keydown: function() {
          on_down(key_nodes.x);
          on_ohi_Hangeul_Process(0x58);
        },
        on_keyup: function() {
          on_up(key_nodes.x);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("X");},
      },
      {keys: "c",
        on_keydown: function() {
          on_down(key_nodes.c);
          on_ohi_Hangeul_Process(0x63);
        },
        on_keyup: function() {
          on_up(key_nodes.c);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("c");},
      },
      {keys: "C",
        on_keydown: function() {
          on_down(key_nodes.c);
          on_ohi_Hangeul_Process(0x43);
        },
        on_keyup: function() {
          on_up(key_nodes.c);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("C");},
      },
      {keys: "v",
        on_keydown: function() {
          on_down(key_nodes.v);
          on_ohi_Hangeul_Process(0x76);
        },
        on_keyup: function() {
          on_up(key_nodes.v);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("v");},
      },
      {keys: "V",
        on_keydown: function() {
          on_down(key_nodes.v);
          on_ohi_Hangeul_Process(0x56);
        },
        on_keyup: function() {
          on_up(key_nodes.v);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("V");},
      },
      {keys: "b",
        on_keydown: function() {
          on_down(key_nodes.b);
          on_ohi_Hangeul_Process(0x62);
        },
        on_keyup: function() {
          on_up(key_nodes.b);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("b");},
      },
      {keys: "B",
        on_keydown: function() {
          on_down(key_nodes.b);
          on_ohi_Hangeul_Process(0x42);
        },
        on_keyup: function() {
          on_up(key_nodes.b);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("B");},
      },
      {keys: "n",
        on_keydown: function() {
          on_down(key_nodes.n);
          on_ohi_Hangeul_Process(0x6E);
        },
        on_keyup: function() {
          on_up(key_nodes.n);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("n");},
      },
      {keys: "N",
        on_keydown: function() {
          on_down(key_nodes.n);
          on_ohi_Hangeul_Process(0x4E);
        },
        on_keyup: function() {
          on_up(key_nodes.n);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("N");},
      },
      {keys: "m",
        on_keydown: function() {
          on_down(key_nodes.m);
          on_ohi_Hangeul_Process(0x6D);
        },
        on_keyup: function() {
          on_up(key_nodes.m);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("m");},
      },
      {keys: "M",
        on_keydown: function() {
          on_down(key_nodes.m);
          on_ohi_Hangeul_Process(0x4D);
        },
        on_keyup: function() {
          on_up(key_nodes.m);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("M");},
      },
      {keys: ",",
        on_keydown: function() {
          on_down(key_nodes.comma);
          on_ohi_Hangeul_Process(0x2C);
        },
        on_keyup: function() {
          on_up(key_nodes.comma);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(",");},
      },
      {keys: "<",
        on_keydown: function() {
          on_down(key_nodes.comma);
          on_ohi_Hangeul_Process(0x3C);
        },
        on_keyup: function() {
          on_up(key_nodes.comma);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("<");},
      },
      {keys: ".",
        on_keydown: function() {
          on_down(key_nodes.period);
          on_ohi_Hangeul_Process(0x2E);
        },
        on_keyup: function() {
          on_up(key_nodes.period);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(".");},
      },
      {keys: ">",
        on_keydown: function() {
          on_down(key_nodes.period);
          on_ohi_Hangeul_Process(0x3E);
        },
        on_keyup: function() {
          on_up(key_nodes.period);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(">");},
      },
      {keys: "/",
        on_keydown: function() {
          on_down(key_nodes.forwardslash);
          on_ohi_Hangeul_Process(0x2F);
        },
        on_keyup: function() {
          on_up(key_nodes.forwardslash);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("/");},
      },
      {keys: "?",
        on_keydown: function() {
          on_down(key_nodes.forwardslash);
          on_ohi_Hangeul_Process(0x3F);
        },
        on_keyup: function() {
          on_up(key_nodes.forwardslash);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("?");},
      },
      {keys: "ctrl",
        on_keydown: function() {
          on_down(key_nodes.left_ctrl);
          on_down(key_nodes.right_ctrl);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.left_ctrl);
          on_up(key_nodes.right_ctrl);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "alt",
        on_keydown: function() {
          on_down(key_nodes.left_alt);
          on_down(key_nodes.right_alt);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.left_alt);
          on_up(key_nodes.right_alt);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "cmd",
        on_keydown: function() {
          on_down(key_nodes.left_cmd);
          on_down(key_nodes.right_cmd);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.left_cmd);
          on_up(key_nodes.right_cmd);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "space",
        on_keydown: function() {
          on_down(key_nodes.space);
          on_ohi_Hangeul_Process(0x20);
        },
        on_keyup: function() {
          on_up(key_nodes.space);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "up",
        on_keydown: function() {
          on_down(key_nodes.up);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.up);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      //{keys: "down",
        //on_keydown: function() {
          //on_down(key_nodes.down);
          //on_ohi_Hangeul_Process(0x01);
        //},
        //on_keyup: function() {
          //on_up(key_nodes.down);
          //on_ohi_Hangeul_Process(0x00);
        //},
      //},
      //{keys: "left",
        //on_keydown: function() {
          //on_down(key_nodes.left);
          //on_ohi_Hangeul_Process(0x01);
        //},
        //on_keyup: function() {
          //on_up(key_nodes.left);
          //on_ohi_Hangeul_Process(0x00);
        //},
      //},
      //{keys: "right",
        //on_keydown: function() {
          //on_down(key_nodes.right);
          //on_ohi_Hangeul_Process(0x01);
        //},
        //on_keyup: function() {
          //on_up(key_nodes.right);
          //on_ohi_Hangeul_Process(0x00);
        //},
      //},
      //{keys: "print",
        //on_keydown: function(e) {
          //on_down(key_nodes.print);
          //on_ohi_Hangeul_Process(0x01);
        //},
        //on_keyup: function() {
          //on_up(key_nodes.print);
          //on_ohi_Hangeul_Process(0x00);
        //},
      //},
      {keys: "scroll",
        on_keydown: function() {
          on_down(key_nodes.scroll_lock);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.scroll_lock);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "pause",
        on_keydown: function() {
          on_down(key_nodes.pause_break);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.pause_break);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "insert",
        on_keydown: function() {
          on_down(key_nodes.insert);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.insert);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "home",
        on_keydown: function() {
          on_down(key_nodes.home);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.home);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "pageup",
        on_keydown: function() {
          on_down(key_nodes.page_up);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.page_up);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "delete",
        on_keydown: function() {
          on_down(key_nodes["delete"]);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes["delete"]);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "end",
        on_keydown: function() {
          on_down(key_nodes.end);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.end);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "pagedown",
        on_keydown: function() {
          on_down(key_nodes.page_down);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.page_down);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "num",
        on_keydown: function() {
          on_down(key_nodes.num_lock);
          on_ohi_Hangeul_Process(0x01);
        },
        on_keyup: function() {
          on_up(key_nodes.num_lock);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "num_divide",
        on_keydown: function() {
          on_down(key_nodes.divide);
          on_ohi_Hangeul_Process(0x2F);
        },
        on_keyup: function() {
          on_up(key_nodes.divide);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("/");},
      },
      {keys: "num_multiply",
        on_keydown: function() {
          on_down(key_nodes.multiply);
          on_ohi_Hangeul_Process(0x2A);
        },
        on_keyup: function() {
          on_up(key_nodes.multiply);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("*");},
      },
      {keys: "num_subtract",
        on_keydown: function() {
          on_down(key_nodes.subtract);
          on_ohi_Hangeul_Process(0x2D);
        },
        on_keyup: function() {
          on_up(key_nodes.subtract);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("-");},
      },
      {keys: "num_add",
        on_keydown: function() {
          on_down(key_nodes.add);
          on_ohi_Hangeul_Process(0x2B);
        },
        on_keyup: function() {
          on_up(key_nodes.add);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("+");},
      },
      {keys: "num_enter",
        on_keydown: function() {
          on_down(key_nodes.num_enter);
          on_ohi_Hangeul_Process(0x0D);
        },
        on_keyup: function() {
          on_up(key_nodes.num_enter);
          on_ohi_Hangeul_Process(0x00);
        },
      },
      {keys: "num_decimal",
        on_keydown: function() {
          on_down(key_nodes.num_decimal);
          on_ohi_Hangeul_Process(0x2E);
        },
        on_keyup: function() {
          on_up(key_nodes.num_decimal);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key(".");},
      },
      {keys: "num_0",
        on_keydown: function() {
          on_down(key_nodes.num_0);
          on_ohi_Hangeul_Process(0x30);
        },
        on_keyup: function() {
          on_up(key_nodes.num_0);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("0");},
      },
      {keys: "num_1",
        on_keydown: function() {
          on_down(key_nodes.num_1);
          on_ohi_Hangeul_Process(0x31);
        },
        on_keyup: function() {
          on_up(key_nodes.num_1);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("1");},
      },
      {keys: "num_2",
        on_keydown: function() {
          on_down(key_nodes.num_2);
          on_ohi_Hangeul_Process(0x32);
        },
        on_keyup: function() {
          on_up(key_nodes.num_2);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("2");},
      },
      {keys: "num_3",
        on_keydown: function() {
          on_down(key_nodes.num_3);
          on_ohi_Hangeul_Process(0x33);
        },
        on_keyup: function() {
          on_up(key_nodes.num_3);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("3");},
      },
      {keys: "num_4",
        on_keydown: function() {
          on_down(key_nodes.num_4);
          on_ohi_Hangeul_Process(0x34);
        },
        on_keyup: function() {
          on_up(key_nodes.num_4);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("4");},
      },
      {keys: "num_5",
        on_keydown: function() {
          on_down(key_nodes.num_5);
          on_ohi_Hangeul_Process(0x35);
        },
        on_keyup: function() {
          on_up(key_nodes.num_5);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("5");},
      },
      {keys: "num_6",
        on_keydown: function() {
          on_down(key_nodes.num_6);
          on_ohi_Hangeul_Process(0x36);
        },
        on_keyup: function() {
          on_up(key_nodes.num_6);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("6");},
      },
      {keys: "num_7",
        on_keydown: function() {
          on_down(key_nodes.num_7);
          on_ohi_Hangeul_Process(0x37);
        },
        on_keyup: function() {
          on_up(key_nodes.num_7);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("7");},
      },
      {keys: "num_8",
        on_keydown: function() {
          on_down(key_nodes.num_8);
          on_ohi_Hangeul_Process(0x38);
        },
        on_keyup: function() {
          on_up(key_nodes.num_8);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("8");},
      },
      {keys: "num_9",
        on_keydown: function() {
          on_down(key_nodes.num_9);
          on_ohi_Hangeul_Process(0x39);
        },
        on_keyup: function() {
          on_up(key_nodes.num_9);
          on_ohi_Hangeul_Process(0x00);
        },
        on_release: function() {match_key("9");},
      }
    ];

    for (var i in combos) {
      if (combos[i].keys != "backspace") {
        // 글쇠가 눌렸을 때 반복해서 입력되는 것을 막는다
        combos[i]['prevent_repeat'] = true;
      }
      // return true to cancel the default response
      combos[i]['prevent_default'] = true;
    }
    return listener.register_many(combos);
  };

  demos = {
    demo_1: {
      wire: function() {
        // 자리 익히기에서 풀었던 click 을 다시 묶어준다
        tadak_tadak = false;
        mapping_layout_to_html();
        focus_tag_id = 'inputText';
        inputText_focus();
        return;
      },
      unwire: function() {
        return;
      }
    },
    demo_2: {
      wire: function() {
        // 자리 익히기에서 풀었던 click 을 다시 묶어준다
        tadak_tadak = false;
        mapping_layout_to_html();
        focus_tag_id = 'searchText';
        inputText_focus();
        return;
      },
      unwire: function() {
        return;
      }
    },
    demo_3: {
      wire: function() {
        // 자리 익히기에서는 html 글쇠의 click 을 푼다
        tadak_tadak = true;
        mapping_layout_to_html();
        focus_tag_id = 'jamo_panel';
        table_taja = get_taja_hangeul(KO_type);
        // false:글판이 바뀌지 않았다
        reset_taja_key(false);
        return;
      },
      unwire: function() {
        tadak_tadak = false;
        // false:글판이 바뀌지 않았다
        reset_taja_key(false);
        return;
      }
    },
    demo_4: {
      wire: function() {
        // 자리 익히기에서 풀었던 click 을 다시 묶어준다
        tadak_tadak = false;
        mapping_layout_to_html();
        focus_tag_id = 'input_show';
        inputText_focus();
        resetButton();
        getResponse();
        resetShow();
        return;
      },
      unwire: function() {
        csv = [];
        return;
      }
    },
  };

  unwire_demo = function(demo_node) {
    return wire_demo(demo_node, false);
  };

  wire_demo = function(demo_node, wiring) {
    var demo;
    var demo_obj;
    if (wiring == null) {
      wiring = true;
    }
    demo = demo_node.data("demo");
    demo_obj = demos[demo];
    if (!demo_obj) {
      return false;
    }
    if (wiring) {
      return demo_obj.wire();
    }
    return demo_obj.unwire();
  };

  get_active_demo = function() {
    var return_node;
    return_node = false;
    $('.examples .demo').each(function(_, node) {
      node = $(node);
      if (node.css("display") === "block") {
        return return_node = node;
      }
    });
    return return_node;
  };

  activate_demo = function(demo_name) {
    var active_demo;
    var demo;
    var nav_node;
    demo = $(".examples .demo[data-demo=" + demo_name + "]");
    if (!demo.length) {
      return false;
    }
    active_demo = get_active_demo();
    if (demo === active_demo) {
      return false;
    }
    if (active_demo) {
      unwire_demo(active_demo);
      active_demo.css("display", "none");
    }
    demo.css("display", "block");
    nav_node = $(".overview li a[data-demo=" + demo_name + "]");
    $('.overview li a').removeClass("active");
    nav_node.addClass("active");
    wire_demo(demo);
    return;
  };

  activate_next_demo = function() {
    var active_demo;
    var next_demo;
    var next_name;
    active_demo = get_active_demo();
    next_demo = active_demo.next();
    if (next_demo.length) {
      next_name = next_demo.data("demo");
    } else {
      next_name = "demo_1";
    }
    return activate_demo(next_name);
  };

  activate_prev_demo = function() {
    var active_demo;
    var next_demo;
    var next_name;
    active_demo = get_active_demo();
    next_demo = active_demo.prev();
    if (next_demo.length) {
      next_name = next_demo.data("demo");
    } else {
      next_name = "demo_3";
    }
    return activate_demo(next_name);
  };

  bind_demos = function() {
    // a.demo_link 를 누를 때 그에 맞는 것을 켠다
    $('body').delegate('a.demo_link', 'click', function() {
      var demo;
      demo = $(this).data("demo");
      return activate_demo(demo);
    });
    // 글쇠를 누를 때마다 a.demo_link 를 차례로 돈다
    listener.register_combo({
      //keys: "`",
      keys: "esc",
      is_exclusive: true,
      prevent_default: true,
      on_keyup: activate_next_demo
    });
    //listener.simple_combo("ctrl 1", function() {
      //return activate_demo("demo_1");
    //}, true);
    //listener.simple_combo("ctrl 2", function() {
      //return activate_demo("demo_2");
    //}, true);
    //listener.simple_combo("ctrl 3", function() {
      //return activate_demo("demo_3");
    //}, true);
  };


  bind_keyboard();
  bind_demos();
  activate_demo("demo_1");
  listener.listen();
  $("[data-toggle = 'tooltip']").tooltip();
  ohiStart();

  if (navigator.userAgent.indexOf("Mac OS X") !== -1) {
    $('#key_scroll_lock, #key_pause_break, #key_insert').css("opacity", 0.5);
  }

}).call(this);

// 그림을 미리 불러온다
// https://perishablepress.com/3-ways-preload-images-css-javascript-ajax/
function preloader() {
  var images = [];
  function preload() {
    for (var i in preload.arguments) {
      images[i] = new Image();
      images[i].src = preload.arguments[i];
    }
  }
  preload(
    "/images/taja/finger_1_on.png",
    "/images/taja/finger_2_on.png",
    "/images/taja/finger_3_on.png",
    "/images/taja/finger_4_on.png",
    "/images/taja/finger_5_on.png",
    "/images/taja/finger_6_on.png",
    "/images/taja/finger_7_on.png",
    "/images/taja/finger_8_on.png",
    "/images/taja/finger_9_on.png",
    "/images/taja/finger_10_on.png"
  );
}
function addLoadEvent(func) {
  var oldonload = window.onload;
  if (typeof(window.onload) != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      if (oldonload) {
        oldonload();
      }
      func();
    }
  }
}
addLoadEvent(preloader);

});
